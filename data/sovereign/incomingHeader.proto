// This file holds data structures related to incoming headers from one chain(local/main/test/etc.) to a sovereign chain.
// This incoming header will be received from a notifier. In the future, this will also hold a proof of the incoming operations
syntax = "proto3";

package proto;

option go_package = "sovereign";
option (gogoproto.stable_marshaler_all) = true;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/multiversx/mx-chain-core-go/data/transaction/log.proto";
import "github.com/multiversx/mx-chain-core-sovereign-go/data/sovereign/dto/sourceChainID.proto";

message IncomingHeader {
  // For now, these are the bytes representing the marshalled header/block/checkpoint from another chain
  bytes Proof                  = 1 [(gogoproto.jsontag) = "proof"];
  ChainID SourceChainID        = 2 [(gogoproto.jsontag) = "sourceChainID"];
  // This represents a nonce/round/checkpoint/etc. for each chain
  uint64 Nonce                  = 3 [(gogoproto.jsontag) = "nonce"];
  repeated Event IncomingEvents = 4 [(gogoproto.jsontag) = "incomingEvents,omitempty"];
}
